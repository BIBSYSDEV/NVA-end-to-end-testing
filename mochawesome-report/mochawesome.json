{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-26T10:32:04.483Z",
    "end": "2021-08-26T10:32:43.337Z",
    "duration": 38854,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0596389-985f-4e89-85dc-e86202e03de2",
      "title": "",
      "fullFile": "cypress\\integration\\24-authentication\\user-logs-in.feature",
      "file": "cypress\\integration\\24-authentication\\user-logs-in.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
          "title": "User logs in",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User without their Feide ID in ARP logs in",
              "fullTitle": "User logs in User without their Feide ID in ARP logs in",
              "timedOut": null,
              "duration": 5461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6e654d25-0ebc-4ba5-9426-1a811cd2bbe8",
              "parentUUID": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User with their Feide ID in ARP logs in",
              "fullTitle": "User logs in User with their Feide ID in ARP logs in",
              "timedOut": null,
              "duration": 2913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "38d59199-251b-4b11-9aeb-d46960eefae0",
              "parentUUID": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User creates a new Author identity",
              "fullTitle": "User logs in User creates a new Author identity",
              "timedOut": null,
              "duration": 20664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b0d265d1-3375-4cc6-af81-b7e7275a0dda",
              "parentUUID": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User updates an Author identity",
              "fullTitle": "User logs in User updates an Author identity",
              "timedOut": null,
              "duration": 5085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c7201d42-fffc-4542-82e3-1adeebc10e6a",
              "parentUUID": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User adds an ORCID to their Author identity",
              "fullTitle": "User logs in User adds an ORCID to their Author identity",
              "timedOut": null,
              "duration": 4499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8e4daff9-8cda-46f2-9856-6fcb6ebb8fe1",
              "parentUUID": "056a0ef4-c059-4d58-a137-5b85559cdf1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e654d25-0ebc-4ba5-9426-1a811cd2bbe8",
            "38d59199-251b-4b11-9aeb-d46960eefae0",
            "b0d265d1-3375-4cc6-af81-b7e7275a0dda",
            "c7201d42-fffc-4542-82e3-1adeebc10e6a",
            "8e4daff9-8cda-46f2-9856-6fcb6ebb8fe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}