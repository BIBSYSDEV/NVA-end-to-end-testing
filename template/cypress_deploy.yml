AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
  Deploy and run Cypress end-to-end tests for NVA

Parameters:
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
    Default: '{{resolve:secretsmanager:githubtoken:SecretString}}'
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: BIBSYSDEV
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: NVA-end-to-end-testing
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: master
  AppBaseUrl:
    Type: String
    Description: Address to NVA application
    Default: 'http://frontend.sandbox.nva.aws.unit.no/'
  ApiBaseUrl:
    Type: String
    Description: Address to NVA services
    Default: 'https://api.sandbox.nva.aws.unit.no/'
  OrcidBaseUrl:
    Type: String
    Description: Address to ORCID services
    Default: '{{resolve:secretsmanager:OrcidBaseUrl:SecretString}}'
  OrcidClientID:
    Type: String
    Description: Clientid for ORCID
    NoEcho: true
    Default: '{{resolve:secretsmanager:OrcidClientID:SecretString}}'
  OrcidClientSecret:
    Type: String
    Description: Secret to authenticate for ORCID
    NoEcho: true
    Default: '{{resolve:secretsmanager:OrcidClientSecret:SecretString}}'

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactStoreBucket
          - Name: CYPRESS_AWS_REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: CYPRESS_AWS_IDENTITY_POOL_ID
            Type: PLAINTEXT
            Value: !ImportValue CognitoIdentityPoolId
          - Name: CYPRESS_AWS_USER_POOL_ID
            Type: PLAINTEXT
            Value: !ImportValue CognitoUserPoolId
          - Name: CYPRESS_AWS_CLIENT_ID
            Type: PLAINTEXT
            Value: !ImportValue CognitoUserPoolAppClientId
          - Name: CYPRESS_REACT_APP_URL
            Type: PLAINTEXT
            Value: !Ref AppBaseUrl
          - Name: CYPRESS_REACT_APP_API_URL
            Type: PLAINTEXT
            Value: !Ref ApiBaseUrl
          - Name: CYPRESS_REACT_APP_ORCID_CLIENT_ID
            Type: PLAINTEXT
            Value: !Ref OrcidClientID
          - Name: CYPRESS_REACT_APP_ORCID_BASE_URL
            Type: PLAINTEXT
            Value: !Ref OrcidClientID
          - Name: CYPRESS_REMOTE
            Type: PLAINTEXT
            Value: remote
          - Name: ROLE_ARN
            Type: PLAINTEXT
            Value: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                OAuthToken: !Ref GitHubOAuthToken
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !GetAtt CodeBuildProject.Arn
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Effect: Allow
                Resource:
                  - !Sub ${ArtifactStoreBucket.Arn}/*
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource: !GetAtt CodeBuildProject.Arn
              - Action:
                  - 'ssm:getParameters'
                Effect: Allow
                Resource: '*'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*'
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:DeleteObjects'
                Resource:
                  - !Sub ${ArtifactStoreBucket.Arn}/*
        - PolicyName: CognitoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cognito-idp:AdminSetUserPassword'
                  - 'cognito-idp:AdminInitiateAuth'
                Resource:
                  - '*'
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
Outputs:
  CodebuildServiceRoleArn:
    Description: ARN Identifier CodeBuildPolicy
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: CodeBuildServiceRoleArn
